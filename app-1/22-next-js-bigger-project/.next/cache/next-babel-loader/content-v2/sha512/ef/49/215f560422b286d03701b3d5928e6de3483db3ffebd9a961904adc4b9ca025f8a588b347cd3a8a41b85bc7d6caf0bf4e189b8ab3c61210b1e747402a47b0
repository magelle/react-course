{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.title,\n    image: props.image,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MeetupDetails","props","title","image","address","description"],"mappings":";;;;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBAAO,QAAC,YAAD;AACL,IAAA,KAAK,EAAEA,KAAK,CAACC,KADR;AAEL,IAAA,KAAK,EAAED,KAAK,CAACE,KAFR;AAGL,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHV;AAIL,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJd;AAAA;AAAA;AAAA;AAAA,WAAP;AAMD,CAPD;;KAAML,a;;AAyCN,eAAeA,aAAf","sourcesContent":["import {useRouter} from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient} from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  return <MeetupDetail\n    title={props.title}\n    image={props.image}\n    address={props.address}\n    description={props.description}\n  />\n}\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n\n  client.close();\n\n  return {\n    paths: meetups.map(m => ({params: {meetupId: m._id.toString()}})),\n    fallback: true // is the paths array exhaustive\n  }\n}\n\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetup = await meetupCollection.findOne({_id: meetupId});\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: meetup\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}