{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/[meetupId]/index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.title,\n    image: props.image,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    })),\n    fallback: true // is the paths array exhaustive\n\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MongoClient","MeetupDetails","props","title","image","address","description","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","paths","map","m","params","meetupId","toString","fallback","getStaticProps","context","meetup","findOne","meetupData"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBAAO,QAAC,YAAD;AACL,IAAA,KAAK,EAAEA,KAAK,CAACC,KADR;AAEL,IAAA,KAAK,EAAED,KAAK,CAACE,KAFR;AAGL,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHV;AAIL,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJd;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CAPD;;AASA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,CAAC,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,CAAC,CAACL,GAAF,CAAMQ,QAAN;AAAX;AAAT,KAAL,CAAb,CADF;AAELC,IAAAA,QAAQ,EAAE,IAFL,CAEU;;AAFV,GAAP;AAID,CAbM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMe,MAAM,GAAG,MAAMhB,gBAAgB,CAACiB,OAAjB,CAAyB;AAACb,IAAAA,GAAG,EAAEO;AAAN,GAAzB,CAArB;AAEAd,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACL2B,MAAAA,UAAU,EAAEF;AADP;AADF,GAAP;AAKD,CAfM;AAiBP,eAAe1B,aAAf","sourcesContent":["import {useRouter} from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient} from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  return <MeetupDetail\n    title={props.title}\n    image={props.image}\n    address={props.address}\n    description={props.description}\n  />\n}\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n\n  client.close();\n\n  return {\n    paths: meetups.map(m => ({params: {meetupId: m._id.toString()}})),\n    fallback: true // is the paths array exhaustive\n  }\n}\n\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetup = await meetupCollection.findOne({_id: meetupId});\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: meetup\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}