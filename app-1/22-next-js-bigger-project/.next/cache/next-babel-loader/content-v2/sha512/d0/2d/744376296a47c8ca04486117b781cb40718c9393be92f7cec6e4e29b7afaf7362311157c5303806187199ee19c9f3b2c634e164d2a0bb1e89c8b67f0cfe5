{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}; // Server Side page generation\n// export const getServerSideProps = (context) => {\n//   // Request and Responses\n//   const request = context.req;\n//   const response = context.res;\n//\n//   // run some codes\n//\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n// Static generation\n\n\nexport const getStaticProps = async () => {\n  // read data from somewhere\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(m => ({\n        id: m._id.toString(),\n        title: m.title,\n        address: m.address,\n        image: m.image\n      }))\n    },\n    revalidate: 10 // This page will be re--pre-generated (on server) every 10 seconds\n\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/index.js"],"names":["MeetupList","Fragment","useEffect","useState","MongoClient","Head","HomePage","props","meetups","getStaticProps","client","connect","db","meetupCollection","collection","find","toArray","close","map","m","id","_id","toString","title","address","image","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,QAA7B,QAA4C,OAA5C;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,QAAD;AAAA,4BACP,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADO,eAIP,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AAEA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMN,OAAO,GAAG,MAAMK,gBAAgB,CAACE,IAAjB,GAAwBC,OAAxB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,CAAC,KAAK;AACzBC,QAAAA,EAAE,EAAED,CAAC,CAACE,GAAF,CAAMC,QAAN,EADqB;AAEzBC,QAAAA,KAAK,EAAEJ,CAAC,CAACI,KAFgB;AAGzBC,QAAAA,OAAO,EAAEL,CAAC,CAACK,OAHc;AAIzBC,QAAAA,KAAK,EAAEN,CAAC,CAACM;AAJgB,OAAL,CAAb;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,EATP,CASU;;AATV,GAAP;AAWD,CAtBM;AAwBP,eAAepB,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport {Fragment, useEffect, useState} from \"react\";\nimport {MongoClient} from \"mongodb\";\nimport Head from \"next/head\";\n\nconst HomePage = (props) => {\n  return <Fragment>\n  <Head>\n    <title>React Meetups</title>\n  </Head>\n  <MeetupList meetups={props.meetups}/>\n  </Fragment>\n}\n\n// Server Side page generation\n// export const getServerSideProps = (context) => {\n//   // Request and Responses\n//   const request = context.req;\n//   const response = context.res;\n//\n//   // run some codes\n//\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n// Static generation\nexport const getStaticProps = async () => {\n  // read data from somewhere\n\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map(m => ({\n        id: m._id.toString(),\n        title: m.title,\n        address: m.address,\n        image: m.image\n      }))\n    },\n    revalidate: 10 // This page will be re--pre-generated (on server) every 10 seconds\n  }\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}