{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/new-meetup/index.js\",\n    _this = this;\n\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nvar NewMeetup = function NewMeetup() {\n  var addMeetupHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addMeetupHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = NewMeetup;\nexport default NewMeetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetup\");","map":{"version":3,"sources":["/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/new-meetup/index.js"],"names":["NewMeetupForm","NewMeetup","addMeetupHandler","enteredMeetupData","fetch","method","body","JSON","stringify","headers","response"],"mappings":";;;;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEtB,MAAMC,gBAAgB;AAAA,wEAAG,iBAAQC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,iBAAf,CAFwC;AAG9CM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAHqC,eAApB,CADL;;AAAA;AACjBC,cAAAA,QADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBR,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AAUA,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAbD;;KAAMD,S;AAeN,eAAeA,SAAf","sourcesContent":["import NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nconst NewMeetup = () => {\n\n  const addMeetupHandler = async  (enteredMeetupData) => {\n    const response = await fetch('/api/new-meetup', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  };\n\n  return <NewMeetupForm onAddMeetup={addMeetupHandler}/>\n}\n\nexport default NewMeetup"]},"metadata":{},"sourceType":"module"}