{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/[meetupId]/index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = () => {\n  const router = useRouter();\n  const newsId = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"A meetup\",\n    image: \"http://placekitten.com/g/500/300\",\n    address: \"96 rue de l Aigle 17000 La Rochelle\",\n    description: \"a meetup about paris\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    })),\n    fallback: true // is the paths array exhaustive\n\n  };\n};\nexport const getStaticProps = async context => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  });\n  return {\n    props: {\n      title: 'A meetup',\n      image: 'http://placekitten.com/g/500/300',\n      address: '96 rue de l Aigle 17000 La Rochelle',\n      description: 'a meetup about paris'\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/maxime/workspace/react-course/app-1/22-next-js-bigger-project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MongoClient","MeetupDetails","router","newsId","query","meetupId","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","close","paths","map","m","params","toString","fallback","getStaticProps","context","props","title","image","address","description"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,QAAMK,MAAM,GAAGD,MAAM,CAACE,KAAP,CAAaC,QAA5B;AAEA,sBAAO,QAAC,YAAD;AACL,IAAA,KAAK,EAAC,UADD;AAEL,IAAA,KAAK,EAAC,kCAFD;AAGL,IAAA,OAAO,EAAC,qCAHH;AAIL,IAAA,WAAW,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD,CAXD;;AAaA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,EAAoCC,OAApC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,CAAC,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACf,QAAAA,QAAQ,EAAEc,CAAC,CAACL,GAAF,CAAMO,QAAN;AAAX;AAAT,KAAL,CAAb,CADF;AAELC,IAAAA,QAAQ,EAAE,IAFL,CAEU;;AAFV,GAAP;AAID,CAbM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC7C,QAAMjB,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA1B,CAAtB;AAEA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,UADF;AAELC,MAAAA,KAAK,EAAE,kCAFF;AAGLC,MAAAA,OAAO,EAAE,qCAHJ;AAILC,MAAAA,WAAW,EAAE;AAJR;AADF,GAAP;AAQD,CAfM;AAiBP,eAAe5B,aAAf","sourcesContent":["import {useRouter} from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient} from \"mongodb\";\n\nconst MeetupDetails = () => {\n  const router = useRouter()\n\n  const newsId = router.query.meetupId\n\n  return <MeetupDetail\n    title='A meetup'\n    image='http://placekitten.com/g/500/300'\n    address='96 rue de l Aigle 17000 La Rochelle'\n    description='a meetup about paris'\n  />\n}\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n\n  client.close();\n\n  return {\n    paths: meetups.map(m => ({params: {meetupId: m._id.toString()}})),\n    fallback: true // is the paths array exhaustive\n  }\n}\n\nexport const getStaticProps = async context => {\n  const client = await MongoClient.connect('mongodb+srv://magelle:xX9GzxgNN8$G@react-course.ajvki.mongodb.net/?retryWrites=true&w=majority')\n  const db = client.db();\n\n  const meetupCollection = db.collection('meetups');\n  const meetups = await meetupCollection.find({}, {_id: 1});\n\n  return {\n    props: {\n      title: 'A meetup',\n      image: 'http://placekitten.com/g/500/300',\n      address: '96 rue de l Aigle 17000 La Rochelle',\n      description: 'a meetup about paris',\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}